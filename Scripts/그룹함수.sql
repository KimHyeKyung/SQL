--그룹함수

--count : null은 포함안됨
SELECT count(*), COUNT(COMMISSION_PCT) 
FROM EMPLOYEES e ;

SELECT count(*)
FROM EMPLOYEES e 
WHERE SALARY > 16000;

--sum
SELECT count(*), sum(salary)
FROM EMPLOYEES e ;

--avg
SELECT COUNT(COMMISSION_PCT) , sum(COMMISSION_PCT), AVG( e.COMMISSION_PCT)
FROM EMPLOYEES e ;
--**avg는 null값이면 빼고 계산하기 때문에 nvl함수와 같이 사용해야 한다!
SELECT COUNT(COMMISSION_PCT) , sum(COMMISSION_PCT), AVG(NVL(e.COMMISSION_PCT ,0))  
FROM EMPLOYEES e ;

--max()/min()
SELECT MAX(SALARY), MIN(SALARY)  
FROM EMPLOYEES e ;

--group by
SELECT e.DEPARTMENT_ID , ROUND(AVG(SALARY))  
FROM EMPLOYEES e 
GROUP BY DEPARTMENT_ID 
ORDER BY DEPARTMENT_ID ;

SELECT e.DEPARTMENT_ID , JOB_ID ,COUNT(*), sum(SALARY) 
FROM EMPLOYEES e 
GROUP BY DEPARTMENT_ID , JOB_ID 
ORDER BY DEPARTMENT_ID ;

--having
SELECT e.DEPARTMENT_ID , COUNT(*), SUM(SALARY)  
FROM EMPLOYEES e 
GROUP BY DEPARTMENT_ID 
HAVING sum(SALARY) > 20000 AND DEPARTMENT_ID IN (100,50,80) 
ORDER BY DEPARTMENT_ID ;

--CASE ~ END
SELECT
	employee_id,
	salary,
	CASE
		WHEN job_id = 'AC_ACCOUNT' THEN salary + salary * 0.1
		WHEN job_id = 'AC_MGR' THEN salary + salary * 0.2
		ELSE salary
	END job_id
FROM
	employees;
--직원의 이름, 부서, 팀을 출력하세요
--팀은 부서코드로 결정하며 부서코드가 10~50 이면 ‘A-TEAM’
--60~100이면 ‘B-TEAM’ 110~150이면 ‘C-TEAM’ 나머지는 ‘팀없음’ 으로 출력하세요
SELECT 	e.FIRST_NAME ,
		e.DEPARTMENT_ID ,
		CASE 
			WHEN e.department_id between 10 AND 50 THEN 'A-TEAM'
			WHEN e.department_id between 60 AND 100 THEN 'B-TEAM'
			WHEN e.department_id between 110 AND 150 THEN 'C-TEAM'
			ELSE '팀없음'
		END "팀"
FROM EMPLOYEES e; 

--[JOIN]
--EQUI JOIN
SELECT e.FIRST_NAME , e.DEPARTMENT_ID , d.DEPARTMENT_NAME ,d.DEPARTMENT_ID 
FROM EMPLOYEES e , DEPARTMENTS d 
WHERE e.DEPARTMENT_ID  = d.DEPARTMENT_ID ;

SELECT e.FIRST_NAME , j.JOB_TITLE 
FROM EMPLOYEES e ,JOBS j 
WHERE e.JOB_ID  = j.JOB_ID ;

SELECT e.FIRST_NAME , d.DEPARTMENT_NAME ,j.JOB_TITLE 
FROM EMPLOYEES e , JOBS j , DEPARTMENTS d 
WHERE e.DEPARTMENT_ID  = d.DEPARTMENT_ID  AND e.JOB_ID = j.JOB_ID ;

--self join
SELECT emp.FIRST_NAME , mgr.FIRST_NAME 
FROM EMPLOYEES emp, EMPLOYEES mgr
WHERE emp.MANAGER_ID = MGR .MANAGER_ID; 

--[outer join]
--left outer join
SELECT e.DEPARTMENT_ID , e.FIRST_NAME , d.DEPARTMENT_NAME 
FROM EMPLOYEES e 
LEFT OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID ;

--right outer join
SELECT e.DEPARTMENT_ID , e.FIRST_NAME , d.DEPARTMENT_NAME 
FROM EMPLOYEES e 
RIGHT OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID ;

--full outer join
SELECT e.DEPARTMENT_ID , e.FIRST_NAME , d.DEPARTMENT_NAME 
FROM EMPLOYEES e 
FULL OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID ;




